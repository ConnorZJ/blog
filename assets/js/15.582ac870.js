(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{341:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("REST是一种API的模式，一种风格，通过这种形式，我们能把API的风格统一起来。")]),s._v(" "),t("p",[s._v("而通过HTTP的几种请求方式，能够利用其指定对资源的操作类型，一般常用的HTTP方法包括GET、POST、DELETE、PUT等。")]),s._v(" "),t("p",[s._v("在springboot中构建一个restful的项目，是非常快捷方便的。再搭配Spring Data JPA使用，能极大地简化了日常的代码量。下面来看看如何使用！")]),s._v(" "),t("h2",{attrs:{id:"搭建项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建项目"}},[s._v("#")]),s._v(" 搭建项目")]),s._v(" "),t("p",[s._v("首先创建一个springboot项目，依赖勾选web、jpa、mysql和"),t("strong",[s._v("rest repositories")]),s._v("依赖。")]),s._v(" "),t("p",[s._v("创建一个实体类，待会测试用：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Entity")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"person"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Id")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@GeneratedValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("strategy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GenerationType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IDENTITY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// getters and setters")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("配置文件如下：")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.datasource.url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("jdbc:mysql://localhost:3306/jdbc?userSSL=false&serverTimezone=GMT")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.datasource.username")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("root")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.datasource.password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("123456")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.datasource.driver-class-name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("com.mysql.jdbc.Driver")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.jpa.hibernate.ddl-auto")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("update")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.jpa.database")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("mysql")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.jpa.database-platform")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("mysql")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.jpa.show-sql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.jpa.properties.hibernate.dialect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("org.hibernate.dialect.MySQL57Dialect")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("当然还需要一个dao")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PersonDao")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JpaRepository")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("**一个简单的RESTful的springboot服务就已经搭建好了！**是不是非常的简单快捷！！！")]),s._v(" "),t("h2",{attrs:{id:"开始使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始使用"}},[s._v("#")]),s._v(" 开始使用")]),s._v(" "),t("p",[s._v("ps：这里使用postman测试效果")]),s._v(" "),t("p",[s._v("众所周知，HTTP的GET方法一般适用于查询某个资源的，在这个项目里，就使用下面的链接访问资源即可")]),s._v(" "),t("p",[s._v("http://localhost:8080/persons")]),s._v(" "),t("p",[s._v("这个是项目服务地址加上实体类名小写再加上一个's'，这样的话，就能将表中所有的数据查询出来")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504100952.png",alt:""}})]),s._v(" "),t("p",[s._v("可以看到，查询出来的数据是空的，这是因为表中还未添加数据，这里通过POST请求添加一条数据试试，添加新资源的方法是POST方法")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504101501.png",alt:""}})]),s._v(" "),t("p",[s._v("请求发送后，可以看到将这条数据返回了，表示资源添加成功！")]),s._v(" "),t("p",[s._v("返回的信息中，可以看到有个地址是http://localhost:8080/persons/1，这个表示在查询的地址后加上一个id，这样就能根据id进行查询了。")]),s._v(" "),t("p",[s._v("下面再添加几条数据，请求一下http://localhost:8080/persons试试效果")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504101851.png",alt:""}})]),s._v(" "),t("p",[s._v("可以看到，所有的数据被查询出来了，而且还带着分页的信息给我们，这个时候将请求地址修改成分页查询的接口http://localhost:8080/persons?page=1&size=2")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504102114.png",alt:""}})]),s._v(" "),t("p",[s._v("这个接口是请求第二页，每页两条数据的意思，能够看到，返回的除了数据，又给我们提供了first（第一页）、prev（上一页）、last（最后一页）的接口路径。")]),s._v(" "),t("p",[s._v("接下来看看如何进行更新操作：")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504102513.png",alt:""}})]),s._v(" "),t("p",[s._v("更新一般是用PUT方法，通过id，将要更新的数据写到请求体里，这样就能更新成功。")]),s._v(" "),t("p",[s._v("而删除方法也与以上类似，只需要通过DELETE方法，在将id传入即可删除：")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504102705.png",alt:""}})]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504102734.png",alt:""}})]),s._v(" "),t("p",[s._v("可以看到删除成功！")]),s._v(" "),t("p",[s._v("以上就是使用自带的增删改查方法的使用。")]),s._v(" "),t("h2",{attrs:{id:"自定义查询方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义查询方法"}},[s._v("#")]),s._v(" 自定义查询方法")]),s._v(" "),t("p",[s._v("以上的通用CRUD方法肯定不能满足日常需求，所以springboot rest也支持客制化的接口。")]),s._v(" "),t("p",[s._v("比如现在增加一个根据name的关键字查询，在JPA中，这样的方法应该写成如下形式：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PersonDao")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JpaRepository")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findPersonByNameContaining")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Param")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("接下来使用http://localhost:8080/persons/search可以查询出能够用到的所有自定义的方法：")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504103317.png",alt:""}})]),s._v(" "),t("p",[s._v("可以看到，现在就提供了一个**http://localhost:8080/persons/search/findPersonByNameContaining{?name}**的方法，下面使用试试看！")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://qiniuyun.zijie.fun/20200504103432.png",alt:""}})]),s._v(" "),t("p",[s._v("能够看到，通过关键字'三'，能够查询出name中有三的数据！")]),s._v(" "),t("p",[s._v("定制化的接口就是这么简单使用。")])])}),[],!1,null,null,null);a.default=e.exports}}]);